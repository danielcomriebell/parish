//---------------------------------------------------------------MEDIA QUERIES---------------------------------------------------------------------
$break-phone: 767px;
$break-phone-landscape: 767px;
$break-tablet: 1024px;
$break-tablet-landscape: 1024px;
$break-laptop-small: 1280px;
$break-laptop-medium: 1440px;
$break-laptop-large: 1920px;
$break-desktop: 50000px;
/*$break-large-desktop: 2500px;*/
/*$break-infinite: 500000px;*/

@mixin respond-to($media) {
/*  @if $media == large-desktop {
    @media only screen and (min-width: $break-large-desktop + 1) and (max-width: $break-infinite) { @content; }
  }*/
  @if $media == desktop {
    @media only screen and (min-width: $break-laptop-large + 1) and (max-width: $break-desktop) { @content; }
  }
  @else if $media == laptop-large {
    @media only screen and (min-width: $break-laptop-medium + 1) and (max-width: $break-laptop-large) { @content; }
  }
  @else if $media == laptop-medium {
    @media only screen and (min-width: $break-laptop-small + 1) and (max-width: $break-laptop-medium) { @content; }
  }
  @else if $media == laptop-small {
    @media only screen and (min-width: $break-tablet + 1) and (max-width: $break-laptop-small) { @content; }
  }

  ////////////|||||||||||..just changed the tablet media query below because it was not reading the landscape view: 1024px is the tablet landscape width..||||||||||||||\\\\\\\\\\

  @else if $media == tablet-landscape {
    @media only screen and (min-width: $break-phone + 1) and (max-width: $break-tablet-landscape) and (orientation: landscape) { @content; }
  }
  @else if $media == tablet-portrait {
    @media only screen and (min-width: $break-phone + 1) and (max-width: $break-tablet) and (orientation: portrait) { @content; }
  }
  @else if $media == phone {
    @media only screen and (min-width: 0px) and (max-width: $break-phone) { @content; }
  }

  //These are only for the real device
  @else if $media == tablet-landscape-device {
    @media only screen and (min-device-width: $break-phone + 1) and (max-device-width: $break-tablet) and (orientation: landscape) { @content; }
  }
  @else if $media == tablet-portrait-device {
    @media only screen and (min-device-width: $break-phone + 1) and (max-device-width: $break-tablet) and (orientation: portrait) { @content; }
  }
  @else if $media == phone-device {
    @media only screen and (min-width: 0px) and (max-device-width: $break-phone) { @content; }
  }
  @else if $media == phone-landscape-device {
    @media only screen and (min-width: 0px) and (max-width: $break-phone) and (orientation: landscape) { @content; }
  }
}





@mixin hover-effect-color($color: $white, $hover: $white-transparent){
  color: $color;
  transition:         color $transition-medium ease;
  -webkit-transition: color $transition-medium ease;
  -moz-transition:    color $transition-medium ease;
  -ms-transition:     color $transition-medium ease;
  -o-transition:      color $transition-medium ease;
  // opacity: $hover;

  &:hover {
    color: $hover;
    @include respond-to(phone-device) {
        color: $color !important;
    }
    @include respond-to(tablet-portrait-device) {
        color:$color !important;
    }
    @include respond-to(tablet-landscape-device) {
        color: $color !important;
    }
  }

}



@mixin image-fade($image-faded: 0.8){

opacity: 1;
	  -webkit-transition: opacity 500ms ease;
	  -moz-transition: opacity 500ms ease;
	  -ms-transition: opacity 500ms ease;
	  -o-transition: opacity 500ms ease;
	  transition: opacity 500ms ease;
	&:hover {
	  opacity: $image-faded;
    @include respond-to(phone-device) {
      opacity: 1 !important;
    }
    @include respond-to(tablet-portrait-device) {
      opacity: 1 !important;
    }
    @include respond-to(tablet-landscape-device) {
      opacity: 1 !important;
    }
	}
}


@mixin transform-element($coordinate){
  transform: $coordinate;
  -ms-transform: $coordinate; /* IE 9 */
 	-webkit-transform: $coordinate; /* Safari */

  transform-origin: 0 0;
}


@mixin image-invisible($image-faded: 0.8){

opacity: 0;
-webkit-transition: opacity 300ms ease;
-moz-transition: opacity 300ms ease;
-ms-transition: opacity 300ms ease;
-o-transition: opacity 300ms ease;
transition: opacity 300ms ease;

}
